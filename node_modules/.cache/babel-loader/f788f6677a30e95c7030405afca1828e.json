{"ast":null,"code":"import _defineProperty from \"D:\\\\React-burger-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  orders: [],\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = _objectSpread({}, action.orderData, {\n        id: action.orderId\n      });\n\n      return _objectSpread({}, state, {\n        loading: false,\n        orders: state.orders.concat(newOrder)\n      });\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\React-burger-app\\src\\store\\reducers\\order.js"],"names":["actionTypes","initialState","orders","loading","reducer","state","action","type","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,WAAW,CAACQ,qBAAjB;AACE,+BACKH,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKH,WAAW,CAACS,uBAAjB;AACE,YAAMC,QAAQ,qBACTJ,MAAM,CAACK,SADE;AAEZC,QAAAA,EAAE,EAAEN,MAAM,CAACO;AAFC,QAAd;;AAIA,+BACKR,KADL;AAEEF,QAAAA,OAAO,EAAE,KAFX;AAGED,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaY,MAAb,CAAoBJ,QAApB;AAHV;;AAKF,SAAKV,WAAW,CAACe,oBAAjB;AACE,+BACKV,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOE,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      const newOrder = {\r\n        ...action.orderData,\r\n        id: action.orderId\r\n      }\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder)\r\n      };\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
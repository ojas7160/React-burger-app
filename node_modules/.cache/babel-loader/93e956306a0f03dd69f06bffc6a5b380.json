{"ast":null,"code":"import _defineProperty from \"D:\\\\React-burger-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './actions';\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    meat: 0,\n    bacon: 0,\n    cheese: 0\n  },\n  totalPrice: 4\n};\nconst INGREDIENT_PRICES = {\n  salad: 1,\n  meat: 2,\n  bacon: 0.5,\n  cheese: 3\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\React-burger-app\\src\\store\\reducer.js"],"names":["actionTypes","initialState","ingredients","salad","meat","bacon","cheese","totalPrice","INGREDIENT_PRICES","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,CADI;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,KAAK,EAAE,CAHI;AAIXC,IAAAA,MAAM,EAAE;AAJG,GADM;AAOnBC,EAAAA,UAAU,EAAE;AAPO,CAArB;AAUA,MAAMC,iBAAiB,GAAG;AACzBL,EAAAA,KAAK,EAAE,CADkB;AAEzBC,EAAAA,IAAI,EAAE,CAFmB;AAGzBC,EAAAA,KAAK,EAAE,GAHkB;AAIzBC,EAAAA,MAAM,EAAE;AAJiB,CAA1B;;AAOA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAEhD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKZ,WAAW,CAACa,cAAjB;AACE,+BACKH,KADL;AAEER,QAAAA,WAAW,oBACNQ,KAAK,CAACR,WADA;AAET,WAACS,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,cAAzB,IAA2C;AAF3D,UAFb;AAMEP,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBC,iBAAiB,CAACG,MAAM,CAACG,cAAR;AANlD;;AAQF,SAAKd,WAAW,CAACe,iBAAjB;AACI,+BACKL,KADL;AAEER,QAAAA,WAAW,oBACNQ,KAAK,CAACR,WADA;AAET,WAACS,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,cAAzB,IAA2C;AAF3D;AAFb;;AAOJ;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions';\r\n\r\nconst initialState = {\r\n  ingredients: {\r\n    salad: 0,\r\n    meat: 0,\r\n    bacon: 0,\r\n    cheese: 0\r\n  },\r\n  totalPrice: 4\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n\tsalad: 1, \r\n\tmeat: 2, \r\n\tbacon: 0.5,\r\n\tcheese: 3\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n        },\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n      }\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n        return {\r\n          ...state,\r\n          ingredients: {\r\n            ...state.ingredients,\r\n            [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n          }\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
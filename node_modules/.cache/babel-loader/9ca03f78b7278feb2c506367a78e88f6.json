{"ast":null,"code":"import _defineProperty from \"D:\\\\React-burger-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\React-burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../Auxilury/Auxi';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport AxiosInstance from '../../axios-orders';\nimport WithErrorHandler from '../../Auxilury/withErrorHandling/withErrorHandling';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super();\n\n    this.addIngredientsHandler = type => {\n      const oldCount = this.props.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.props.ingredients);\n\n      updatedIngredients[type] = updatedCount; // const priceAddition = INGREDIENT_PRICES[type];\n      // const oldPrice = this.props.totalPrice;\n      // const newPrice = oldPrice + priceAddition;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      // this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientsHandler = type => {\n      const oldCount = this.props.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount > 1 ? oldCount - 1 : 0;\n\n      const updatedIngredients = _objectSpread({}, this.props.ingredients);\n\n      updatedIngredients[type] = updatedCount; // const priceMinus = INGREDIENT_PRICES[type];\n      // const oldPrice = this.props.totalPrice;\n      // const newPrice = oldPrice - priceMinus;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      // this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.history.push('/checkout'); // const queryParams = [];\n      // for(let i in this.props.ingredients) {\n      // \tqueryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]))\n      // }\n      // queryParams.push(\"price=\" + this.props.totalPrice)\n      // const queryString = queryParams.join('&')\n      // this.props.history.push({\n      // \tpathname: '/checkout', \n      // \tsearch: '?' + queryString\n      // });\n    };\n\n    this.purchaseHandler = this.purchaseHandler.bind(this);\n    this.modalCloseHandler = this.modalCloseHandler.bind(this);\n    this.state = {\n      ingredients: {\n        meat: 0,\n        cheese: 0,\n        bacon: 0,\n        salad: 0\n      },\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props); // AxiosInstance.get('orders.json')\n    // .then(res => {\n    // \tconsole.log(res)\n    // })\n    // .catch(err => {\n    // \tconsole.log(err)\n    // })\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  purchaseHandler() {\n    this.setState({\n      purchasing: true\n    });\n  }\n\n  modalCloseHandler() {\n    this.setState({\n      purchasing: false\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.props.ingredients);\n\n    let orderSummary = React.createElement(OrderSummary, {\n      price: this.props.totalPrice,\n      purchaseContinue: this.purchaseContinueHandler,\n      purchaseCancel: this.modalCloseHandler,\n      ingredients: this.props.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    }\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0; // {salad: true, meat: false ...}\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.modalCloseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, orderSummary), React.createElement(Burger, {\n      ingredients: this.props.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ordered: this.purchaseHandler,\n      purchasable: this.updatePurchaseState(this.props.ingredients),\n      price: this.props.totalPrice,\n      ingredientsAdded: this.props.onIngredientAdd,\n      ingredientRemoved: this.props.onIngredientRemove,\n      disabledInfo: disabledInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdd: ingredient => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingredient\n    }),\n    onIngredientRemove: ingredient => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingredient\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, AxiosInstance));","map":{"version":3,"sources":["D:\\React-burger-app\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","AxiosInstance","WithErrorHandler","Spinner","actionTypes","BurgerBuilder","constructor","addIngredientsHandler","type","oldCount","props","ingredients","updatedCount","updatedIngredients","removeIngredientsHandler","purchaseContinueHandler","history","push","purchaseHandler","bind","modalCloseHandler","state","meat","cheese","bacon","salad","purchasable","purchasing","loading","componentDidMount","console","log","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","render","disabledInfo","orderSummary","totalPrice","key","onIngredientAdd","onIngredientRemove","mapStateToProps","mapDispatchToProps","dispatch","ingredient","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React,  { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../Auxilury/Auxi';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport AxiosInstance from '../../axios-orders';\r\nimport WithErrorHandler from '../../Auxilury/withErrorHandling/withErrorHandling';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass BurgerBuilder extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.purchaseHandler = this.purchaseHandler.bind(this)\r\n\t\tthis.modalCloseHandler = this.modalCloseHandler.bind(this)\r\n\t\tthis.state = {\r\n\t\t\tingredients : {\r\n\t\t\t\tmeat: 0,\r\n\t\t\t\tcheese: 0,\r\n\t\t\t\tbacon: 0,\r\n\t\t\t\tsalad: 0\r\n\t\t\t},\r\n\t\t\tpurchasable: false,\r\n\t\t\tpurchasing: false,\r\n\t\t\tloading: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(this.props)\r\n\t\t// AxiosInstance.get('orders.json')\r\n\t\t// .then(res => {\r\n\t\t// \tconsole.log(res)\r\n\t\t// })\r\n\t\t// .catch(err => {\r\n\t\t// \tconsole.log(err)\r\n\t\t// })\r\n\t}\r\n\r\n\tupdatePurchaseState(ingredients) {\r\n\t\tconst sum = Object.keys(ingredients).map(igKey => {\r\n\t\t\treturn ingredients[igKey]\r\n\t\t}).reduce((sum, el) => {\r\n\t\t\treturn sum + el;\r\n\t\t}, 0);\r\n\t\treturn sum > 0;\r\n\t}\r\n\r\n\taddIngredientsHandler = (type) => {\r\n\t\tconst oldCount = this.props.ingredients[type];\r\n\t\tconst updatedCount = oldCount + 1;\r\n\t\tconst updatedIngredients = {...this.props.ingredients};\r\n\t\tupdatedIngredients[type] = updatedCount;\r\n\t\t// const priceAddition = INGREDIENT_PRICES[type];\r\n\t\t// const oldPrice = this.props.totalPrice;\r\n\t\t// const newPrice = oldPrice + priceAddition;\r\n\t\t// this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n\t\t// this.updatePurchaseState(updatedIngredients);\r\n\t}\r\n\r\n\tremoveIngredientsHandler = (type) => {\r\n\t\tconst oldCount = this.props.ingredients[type];\r\n\t\tif(oldCount <= 0) return;\r\n\t\tconst updatedCount = oldCount > 1 ? oldCount - 1 : 0\r\n\t\tconst updatedIngredients = {...this.props.ingredients};\r\n\t\tupdatedIngredients[type] = updatedCount;\r\n\t\t// const priceMinus = INGREDIENT_PRICES[type];\r\n\t\t// const oldPrice = this.props.totalPrice;\r\n\t\t// const newPrice = oldPrice - priceMinus;\r\n\t\t// this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n\t\t// this.updatePurchaseState(updatedIngredients);\r\n\t}\r\n\r\n\tpurchaseHandler() {\r\n\t\tthis.setState({purchasing: true})\r\n\t}\r\n\r\n\tmodalCloseHandler() {\r\n\t\tthis.setState({purchasing: false})\r\n\t}\r\n\r\n\tpurchaseContinueHandler = () => {\r\n\t\tthis.props.history.push('/checkout')\r\n\t\t// const queryParams = [];\r\n\t\t// for(let i in this.props.ingredients) {\r\n\t\t// \tqueryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]))\r\n\t\t// }\r\n\t\t// queryParams.push(\"price=\" + this.props.totalPrice)\r\n\t\t// const queryString = queryParams.join('&')\r\n\t\t// this.props.history.push({\r\n\t\t// \tpathname: '/checkout', \r\n\t\t// \tsearch: '?' + queryString\r\n\t\t// });\r\n\t}\r\n\r\n\r\n\trender () {\r\n\t\tconst disabledInfo = {...this.props.ingredients};\r\n\t\tlet orderSummary = <OrderSummary\r\n\t\t\tprice={this.props.totalPrice}\r\n\t\t\tpurchaseContinue={this.purchaseContinueHandler}\r\n\t\t\tpurchaseCancel={this.modalCloseHandler}\r\n\t\t\tingredients={this.props.ingredients}\r\n\t\t/>\r\n\t\tif(this.state.loading) {\r\n\t\t\torderSummary = <Spinner/>\r\n\t\t}\r\n\r\n\t\tfor(let key in disabledInfo) {\r\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0 // {salad: true, meat: false ...}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Aux>\r\n\t\t\t\t<Modal show={this.state.purchasing} modalClosed={this.modalCloseHandler}>\r\n\t\t\t\t\t{orderSummary}\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Burger ingredients = {this.props.ingredients}/>\r\n\t\t\t\t\t<BuildControls ordered={this.purchaseHandler} purchasable={this.updatePurchaseState(this.props.ingredients)} price={this.props.totalPrice} ingredientsAdded = {this.props.onIngredientAdd} ingredientRemoved = {this.props.onIngredientRemove} disabledInfo={disabledInfo}/>\r\n\t\t\t</Aux>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tingredients: state.ingredients,\r\n\t\ttotalPrice: state.totalPrice\r\n\t};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => { \r\n\treturn {\r\n\t\tonIngredientAdd: (ingredient) => dispatch({\r\n\t\t\ttype: actionTypes.ADD_INGREDIENT,\r\n\t\t\tingredientName: ingredient\r\n\t\t}),\r\n\t\tonIngredientRemove: (ingredient) => dispatch({\r\n\t\t\ttype: actionTypes.REMOVE_INGREDIENT,\r\n\t\t\tingredientName: ingredient\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, AxiosInstance));"]},"metadata":{},"sourceType":"module"}
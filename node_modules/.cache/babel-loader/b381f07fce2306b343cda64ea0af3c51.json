{"ast":null,"code":"var _jsxFileName = \"/home/ojaswi/codes/react-burger-app/src/components/Order/Order.js\";\nimport React from 'react';\nimport './Order.css';\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      key: ig.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, ig.name, \" (\", ig.amount, \")\");\n  });\n  return React.createElement(\"div\", {\n    className: \"Order\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Ingredients: \", ingredientOutput), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Price: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, Number.parseFloat(props.price).toFixed(2))));\n};\n\nexport default order;","map":{"version":3,"sources":["/home/ojaswi/codes/react-burger-app/src/components/Order/Order.js"],"names":["React","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","textTransform","Number","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,WAAW,GAAE,EAAnB;;AACA,OAAI,IAAIC,cAAR,IAA0BF,KAAK,CAACC,WAAhC,EAA6C;AACzCA,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AAACC,MAAAA,IAAI,EAAEF,cAAP;AAAuBG,MAAAA,MAAM,EAAEL,KAAK,CAACC,WAAN,CAAkBC,cAAlB;AAA/B,KAAjB;AACH;;AAED,QAAMI,gBAAgB,GAAGL,WAAW,CAACM,GAAZ,CAAgBC,EAAE,IAAI;AAC3C,WAAO;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAb;AAA8C,MAAA,GAAG,EAAED,EAAE,CAACJ,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DI,EAAE,CAACJ,IAAhE,QAAwEI,EAAE,CAACH,MAA3E,MAAP;AACH,GAFwB,CAAzB;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBC,gBAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASI,MAAM,CAACC,UAAP,CAAkBX,KAAK,CAACY,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAT,CAAV,CAFJ,CADJ;AAMH,CAfD;;AAiBA,eAAed,KAAf","sourcesContent":["import React from 'react';\nimport './Order.css';\n\nconst order = (props) => {\n    const ingredients= [];\n    for(let ingredientName in props.ingredients) {\n        ingredients.push({name: ingredientName ,amount: props.ingredients[ingredientName]})\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span style={{textTransform: 'capitalize', }} key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n    return (\n        <div className=\"Order\">\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n};\n\nexport default order;"]},"metadata":{},"sourceType":"module"}